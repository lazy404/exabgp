#!/usr/bin/env python

import sys
import time

announce_flow_1 = 'announce flow route { match { source 10.0.0.2/32; destination 10.0.0.3/32; destination-port =3128; protocol tcp; } then { rate-limit 9600; } }'
withdraw_flow_1 = 'withdraw flow route { match { source 10.0.0.2/32; destination 10.0.0.3/32; destination-port =3128; protocol tcp; } }'
announce_flow_2 = 'announce flow route { match { source 10.0.0.1/32; destination 192.168.0.1/32; port [ =80 =8080 ]; destination-port [ >8080&<8088 =3128 ]; source-port >1024; protocol [ udp tcp ]; } then { rate-limit 9600;}}'

messages = [
	'sleep',
	announce_flow_1,
	withdraw_flow_1,
	announce_flow_2,
	'sleep',
	announce_flow_1,
	'sleep',
	withdraw_flow_1,
	'sleep',
	announce_flow_1,  # to catch if a withdraw 2 is sent
]

while messages:
	message = messages.pop(0)
	if message == 'sleep':
		time.sleep(3)
	else:
		sys.stdout.write(message + '\n')
		sys.stdout.flush()

counter = 0
while True:
	try:
		while True:
			line = sys.stdin.readline().strip()
			if line:
				break
			counter += 1
			if counter > 100:
				sys.exit(1)
		counter = 0
		time.sleep(0.5)
	except KeyboardInterrupt:
		pass
	except IOError:
		# most likely a signal during readline
		pass
